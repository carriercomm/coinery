{"version":3,"file":"public/javascripts/overlay.js","sources":["app/overlay/start.coffee"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;CAAA;CAAA;;AAQA,CARA,CAQQ,GAAR,IAAS;CACI,CAAM,EAAjB;CADM;;AAGR,CAXA,EAWE;CAEA;KAAA;CAAA,EAAO,CAAP,WAAO;CAAP,CAEA,CAAuB,CAAvB,YAAQ;CACL,CAAO,EAAP;CAAA,CACS,EAAT,IAAS,CAAC;CACD,EAAU,GAAX,CAAN;CAFF,IACS;CAJZ,GAEA;CAFA,CAOA,CAAU,GAAM,CAAhB;CAPA,CASA,CAA+B,CAA/B,KAAgC,aAAhC;CACE,MAA0B,IAA1B;CADF,EAA+B;CAT/B,CAYA,CAA2B,CAA3B,KAA4B,SAA5B;CACE,IAA8B,GAAnB,GAAX;CADF,EAA2B;CAZ3B,CAeA,CAA2B,CAA3B,KAA4B,SAA5B;CACE,MAA8B,CAAnB,GAAX;CADF,EAA2B;CAf3B,CAkBA,CAA2B,CAA3B,KAA4B,SAA5B;CACE,MAAkB,EAAlB;CADF,EAA2B;CAlB3B,CAqBA,CAA+B,CAA/B,KAAgC,aAAhC;CACE,MAAkB,IAAlB;CADF,EAA+B;CArB/B,CAwBA,CAA6B,CAA7B,KAA8B,WAA9B;CACE,MAAyB,IAAzB;CADF,EAA6B;CAxB7B,CA2BA,CAAqC,CAArC,KAAsC,mBAAtC;CACE,MAAkB,IAAlB;CADF,EAAqC;CA3BrC,CA8BA,CAAiC,CAAjC,KAAkC,eAAlC;CACE;CAAA,EAAS,CAAT;CAAA,GACA,GAAiB;CACjB,IAA4B,CAAX,CAAP;CACR,EAAW,EAAE,CAAb,CAAoB,IAAP,IAAiC;KAHhD;CAAA,EAIO,CAAP;CACA;CAAA;uBAAA;CACE,EAA8B,CAA9B,CAAa,CAAb,SAAQ;CADV,IALA;CAAA,EAOc,CAAd,GAAc,IAPd;CASA;CAVF,EAAiC;CA9BjC,CA0CA,CAAW,KAAX,+BA1CA;CAAA,CA4CA,CAAc,MAAC,EAAf;CACE;CAAA,CACW,CAAX,MAAW;CACT;CAAA,CACA,CAAiC,CAAjC,GAAyB,WAAzB;CADA,CAEA,CAAiC,GAAjC,CAAyB,CAAzB;CACA,CAAwB,CAAS,CAAjC,GAAyC,CAAzC;CAJF,IAAW;CAMX,IAAc,EAAX;CACD;CACM,CAAK,CAAX,MAAW,IAAX;CACE;CADF,MAAW;KAVD;CA5Cd,EA4Cc;CA5Cd,CAyDA,CAA8B,EAA9B,IAA+B,WAA/B;CACc,UAAZ;CADF,EAA8B;CAzD9B,CA4DA,CAAiB,MAAC,KAAlB;CACE;CAAA,IAAQ,CAAL,gBAAH;CACE,EAAa,CAAU,CAAL,CAAlB;CAAA,EACW,CAAU,CAAL,CAAhB;CACA,GAAG,CAAc,CAAjB,IAAG,iBAAH;CACE,MAAO,CAAP;CACY,UAAZ;OALJ;KADe;CA5DjB,EA4DiB;CA5DjB,CAoEA,IAAM,GAAN;CAEA,EAAiC,EAAjC;CACE;CAAA,EAAQ,CAAR,GAAQ;CACR,IAAG;CACD;CACA;KAHF;CAKC,CACC,CADqB,CAAvB,CAAuD,EAAxB,IAA/B,KAAQ;CACN,CAAQ,IAAR;CAAA,CACS,IAAT,EAAS,CAAC;CACA,EAAR,IAAO,CAAP;CAFF,MACS;CARoB,KAM/B;CANF,EAAiC;CAxEjC","sourcesContent":["`\nfunction getURLParameter(name) {\n  return decodeURI(\n    (RegExp(name + '=' + '(.+?)(&|$)').exec(location.search)||[,null])[1]\n  );\n}\n`\n\ndelay = (ms, func) ->\n  setTimeout func, ms\n\n$ ->\n\n  p_id = getURLParameter('id')\n\n  $.ajax \"/api/products/#{p_id}/buy\",\n     async: false\n     success: (response) ->\n       window.product = response\n\n  product = window.product\n\n  $('[data-product-cover]').each (i, el) ->\n    $(el).attr 'src', product['image_url']\n\n  $('[data-price-btc]').each (i, el) ->\n    $(el).html parseFloat(product['btc'].toFixed(6)).toString()\n\n  $('[data-price-usd]').each (i, el) ->\n    $(el).html parseFloat(product['price'].toFixed(2)).toString()\n\n  $('[data-user-name]').each (i, el) ->\n    $(el).html product.user.full_name\n\n  $('[data-product-title]').each (i, el) ->\n    $(el).html product.title\n\n  $('[data-user-avatar]').each (i, el) ->\n    $(el).attr 'src', product.user.img\n\n  $('[data-product-description]').each (i, el) ->\n    $(el).html product.description\n\n  $('[data-product-details]').each (i, el) ->\n    string = \"You'll get \"\n    string += product.assets.length\n    if product.assets.length is 1\n      string += \" #{product.assets[0].asset_file_name.split(\".\")[1].toUpperCase()} file\"\n    size = 0\n    for asset in product.assets\n      size += asset.asset_file_size/1000\n    string += \", #{size.toFixed(0)} kb total\"\n\n    $(el).html string\n\n  url_root = \"https://coinbase.com/inline_payments/\"\n\n  advanceStep = (current) ->\n    $('.panel-container').eq(current).removeClass 'visible'\n    delay 200, ->\n      $('.panel-container').eq(current).hide()\n      $('.panel-container').eq(current+1).show()\n      $('.panel-container').eq(current+1).addClass 'visible'\n      $('iframe').attr 'src', url_root+product['button_code']\n\n    if current is 1\n      $('iframe').remove()\n      delay 100, ->\n        $('input').focus()\n\n  $('a[data-href=\"buy\"]').click (e) =>\n    advanceStep(0)\n\n  receiveMessage = (event) =>\n    if event.origin is \"https://coinbase.com\"\n      event_type = event.data.split(\"|\")[0] # \"coinbase_payment_complete\"\n      event_id = event.data.split(\"|\")[1] # ID for this payment type\n      if event_type is \"coinbase_payment_complete\"\n        console.log \"payment complete\"\n        advanceStep(1)\n\n  window.addEventListener \"message\", receiveMessage, false\n\n  $('a[data-href=\"submit\"]').click (e) =>\n    email = $('input').val()\n    if email is ''\n      alert(\"Email address is required to download purchased files!\")\n      return\n\n    $.ajax \"/api/products/#{product['id']}/purchase?email=#{encodeURIComponent(email)}\",\n      method: 'POST'\n      success: (response) ->\n        console.log response\n\n\n\n\n\n\n\n\n\n\n\n"]}